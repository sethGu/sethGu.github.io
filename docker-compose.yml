version: '3.3'

services:
    redis:
        image: redis:latest
        container_name: redis
        ports:
            - "6379:6379"
        restart: always
        privileged: true
        command: --loglevel verbose
        networks:
            - app-network
            
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - "8080:80"
        privileged: true
        restart: always
        environment:
            - PMA_ARBITRARY=0
            - PMA_HOST=mysql
            # 如果取消下面两行注释, phpmyadmin就不用输入用户名和密码, 可以直接登录
            - PMA_USER=php
            - PMA_PASSWORD=php
        depends_on:
            - mysql
        links:
            - mysql:mysql
        networks:
            - app-network

    phpredisadmin:
        container_name: phpredisadmin
        image: phpredisadmin/phpredisadmin
        expose:
            - '80'
        ports:
            - "9090:80"
        environment:
            # - ADMIN_USER=admin
            # - ADMIN_PASS=admin
            # - REDIS_1_AUTH=ubuntu
            - REDIS_1_NAME=redis
            - REDIS_1_HOST=redis.host
            - REDIS_1_PORT=6379
        depends_on:
            - redis
        links:
            - redis
        restart: always
        privileged: true
        networks:
            - app-network
        # command: --loglevel verbose

    mysql:
        image: mariadb:latest
        container_name: mysql
        ports:
            - "3306:3306"
        restart: always
        privileged: true
        environment:
            MYSQL_ROOT_PASSWORD: MyDBRoot123
            MYSQL_DATABASE: php
            MYSQL_USER: php
            MYSQL_PASSWORD: php
        networks:
            - app-network

            
    myphp:
        depends_on:
            - redis
            - mysql
        build: ./src/php
        container_name: myphp
        privileged: true
        volumes:
            - $HOME/docker-compose/src:/var/www/html
        ports:
            - "9000:9000"
        restart: always
        networks:
            - app-network

    mynginx:
        depends_on:
            - myphp
        image: nginx:latest
        container_name: mynginx
        ports:
            - "80:80"
        restart: always
        privileged: true
        volumes:
            - $HOME/docker-compose/src:/var/www/html
            - $HOME/docker-compose/src/nginx.ini:/etc/nginx/conf.d/default.conf
            - $HOME/docker-compose/src/php-fpm.conf:/etc/php/7.4/fpm/php-fpm.conf
            - $HOME/docker-compose/src/www.conf:/etc/php/7.4/fpm/pool.d/www.conf
        networks:
            - app-network



networks:
    app-network:
        driver: bridge


